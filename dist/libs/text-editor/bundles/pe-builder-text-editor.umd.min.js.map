{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@pe/builder-text-editor/helpers/shadow-dom-selection.helper.ts","ng://@pe/builder-text-editor/helpers/selection.helper.ts","ng://@pe/builder-text-editor/text-editor.interface.ts","ng://@pe/builder-text-editor/services/selection.service.ts","ng://@pe/builder-text-editor/services/transforms/base.transform.ts","ng://@pe/builder-text-editor/services/transforms/bold.transform.ts","ng://@pe/builder-text-editor/services/transforms/color.transform.ts","ng://@pe/builder-text-editor/services/transforms/external-link.transform.ts","ng://@pe/builder-text-editor/services/transforms/font-family.transform.ts","ng://@pe/builder-text-editor/services/transforms/font-size.transform.ts","ng://@pe/builder-text-editor/services/transforms/italic.transform.ts","ng://@pe/builder-text-editor/services/transforms/justify-center.transform.ts","ng://@pe/builder-text-editor/services/transforms/justify-full.transform.ts","ng://@pe/builder-text-editor/services/transforms/justify-left.transform.ts","ng://@pe/builder-text-editor/services/transforms/justify-right.transform.ts","ng://@pe/builder-text-editor/services/transforms/link.transform.ts","ng://@pe/builder-text-editor/services/transforms/ordered.transform.ts","ng://@pe/builder-text-editor/services/transforms/underline.transform.ts","ng://@pe/builder-text-editor/services/transforms/unordered.transform.ts","ng://@pe/builder-text-editor/services/text-editor-state.service.ts","ng://@pe/builder-text-editor/services/text-editor.ts","ng://@pe/builder-text-editor/pipes/safe-html.pipe.ts","ng://@pe/builder-text-editor/components/text-editor.component.ts","ng://@pe/builder-text-editor/components/text-editor.component.html","ng://@pe/builder-text-editor/components/editor-element.directive.ts","ng://@pe/builder-text-editor/text-editor.module.ts","ng://@pe/builder-text-editor/text-editor.constants.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","hasShadow","Element","hasSelection","document","createElement","attachShadow","mode","getSelection","hasShady","window","ShadyDOM","inUse","isSafari","test","navigator","userAgent","MSStream","useDocument","validNodeTypes","Node","ELEMENT_NODE","TEXT_NODE","DOCUMENT_FRAGMENT_NODE","findNode","s","parentNode","isLeft","node","nodes","childNodes","children","i","length","childNode","includes","nodeType","containsNode","addInternalListener","addEventListener","ev","dispatchEvent","CustomEvent","withinInternals","handlers","setTimeout","forEach","fn","push","wasCaret","resolveTask","containsNextElement","walkForward","start","walkFromNode","contains","previousSibling","nextSibling","initialSpace","exec","textContent","type","Promise","resolve","then","cachedRange","Map","getRange","root","rangeCount","getRangeAt","thisFrame","get","initialText","toString","result","range","createRange","insertBefore","fakeSelectionNode","includesBeforeRoot","remove","appendChild","includesAfterRoot","measure","rightNode","leftNode","isNaturalDirection","undefined","updatedSize","initialSize","extend","collapseToEnd","modify","getSelectionDirection","at","setStart","setEnd","TypeError","offsetLeft","offsetRight","size","validRightLength","trailingSpaceCount","ignoredTrailingSpace","internalGetShadowSelection","rs","replace","console","warn","set","delete","createTextNode","ExecCommand","SelectionHelper","container","removeAllRanges","querySelector","shadowRoot","preSelectionRange","cloneRange","selectNodeContents","startContainer","startOffset","end","parentElement","endContainer","restore","savedSelection","doc","ownerDocument","win","defaultView","collapse","nodeStack","foundStart","stop","charIndex","pop","nextCharIndex","selection","addRange","findParentTag","tagName","className","searchDepth","parentTag","anchorNode","focusNode","parent","searchDepthIterable","classList","TextEditorSelection","selectionHelper","savedValueSubject","BehaviorSubject","savedValue$","asObservable","pipe","share","defineProperty","value","next","saveSelection","savedValue","expandToTag","element","core","factory","ɵfac","BaseTransform","execCommand","command","toLowerCase","BoldTransform","_super","toggle","Bold","isSelectionExist","queryCommandState","ColorTransform","queryCommandValue","ForeColor","ExternalLinkTransform","_this","call","getParentLinkElement","hasAttribute","getAttribute","link","unlink","CreateLink","getLinkWithHttps","setAttribute","indexOf","Unlink","FontFamilyTransform","fontName","FontName","FontSizeTransform","style","fontSize","parseInt","Error","fontElements","getElementsByTagName","from","el","removeAttribute","ItalicTransform","Italic","JustifyCenterTransform","justify","JustifyCenter","JustifyFullTransform","JustifyFull","JustifyLeftTransform","JustifyLeft","JustifyRightTransform","JustifyRight","LinkTransform","dataset","anchorTag","OrderedTransform","apply","currentValue","removeTransformList","InsertOrderedList","olList","olListClosed","newListContent","slice","firstPart","split","secondPart","concat","UnderlineTransform","Underline","UnorderedTransform","InsertUnorderedList","ulList","ulListClosed","StateService","boldTransform","colorTransform","fontFamilyTransform","fontSizeTransform","italicTransform","linkTransform","externalLinkTransform","underlineTransform","justifyLeftTransform","justifyRightTransform","justifyCenterTransform","justifyFullTransform","unorderedTransform","orderedTransform","stateSubject$","removeListAlignSubject$","Subject","transformationCompletedSubject$","EventEmitter","transformationCompleted$","changed$","merge","bold$","map","bold","distinctUntilChanged","color$","color","fontSize$","fontFamily$","fontFamily","italic$","italic","link$","externalLink$","externalLink","justifyCenter$","justifyCenter","justifyLeft$","justifyLeft","justifyRight$","justifyRight","justifyFull$","justifyFull","orderedList$","orderedList","underline$","underline","unorderedList$","unorderedList","value$","getValue","toggleBold","toggleItalic","toggleUnderline","toggleJustifyLeft","toggleJustifyRight","toggleJustifyCenter","toggleJustifyFull","toggleUnorderedList","newContent","toggleOrderedList","tag","TextEditor","blockManager","injector","init","Injector","SafeHtmlPipe","sanitized","transform","bypassSecurityTrustHtml","platformBrowser","DomSanitizer","pure","TextEditorComponent","changeDetectorRef","initialValue$","changes$","destroy$","editing","changed","textEditor","state","textArea","nativeElement","ngAfterViewInit","bindEvents","ngOnDestroy","complete","onInput","innerHTML","onBlur","onPaste","event","preventDefault","strippedText","clipboardData","getData","InsertText","tap","emit","takeUntil","subscribe","fromEvent","filter","prev","JSON","stringify","ChangeDetectorRef","selectors","viewQuery","rf","ctx","i0.ɵɵelementStart","i0.ɵɵlistener","$event","i0.ɵɵelementEnd","i0.ɵɵproperty","TextEditorElementDirective","providers","PebTextEditorModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","const debug = false;\n\nconst hasShadow = 'attachShadow' in Element.prototype && 'getRootNode' in Element.prototype;\nconst hasSelection = !!(hasShadow && document.createElement('div').attachShadow({ mode: 'open' }).getSelection);\nconst hasShady = (window as any).ShadyDOM && (window as any).ShadyDOM.inUse;\nconst isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent) ||\n  /iPad|iPhone|iPod/.test(navigator.userAgent) && !(window as any).MSStream;\nconst useDocument = !hasShadow || hasShady || (!hasSelection && !isSafari);\n\nconst validNodeTypes = [Node.ELEMENT_NODE, Node.TEXT_NODE, Node.DOCUMENT_FRAGMENT_NODE];\nfunction isValidNode(node) {\n  return validNodeTypes.includes(node.nodeType);\n}\n\nfunction findNode(s, parentNode, isLeft) {\n  const nodes = parentNode.childNodes || parentNode.children;\n  if (!nodes) {\n    return parentNode;  // found it, probably text\n  }\n\n  for (let i = 0; i < nodes.length; ++i) {\n    const j = isLeft ? i : (nodes.length - 1 - i);\n    const childNode = nodes[j];\n    if (!isValidNode(childNode)) {\n      continue;\n    }\n\n    debug && console.debug('checking child', childNode, 'IsLeft', isLeft);\n    if (s.containsNode(childNode, true)) {\n      if (s.containsNode(childNode, false)) {\n        debug && console.info('found child', childNode);\n        return childNode;\n      }\n      debug && console.info('descending child', childNode);\n      return findNode(s, childNode, isLeft);\n    }\n    debug && console.info(parentNode, 'does NOT contain', childNode);\n  }\n  return parentNode;\n}\n\nconst addInternalListener = (() => {\n  if (hasSelection || useDocument) {\n    // getSelection exists or document API can be used\n    document.addEventListener('selectionchange', (ev) => {\n      document.dispatchEvent(new CustomEvent('-shadow-selectionchange'));\n    });\n    return () => {};\n  }\n\n  let withinInternals = false;\n  const handlers = [];\n\n  document.addEventListener('selectionchange', (ev) => {\n    if (withinInternals) {\n      return;\n    }\n    document.dispatchEvent(new CustomEvent('-shadow-selectionchange'));\n    withinInternals = true;\n    window.setTimeout(() => {\n      withinInternals = false;\n    }, 0);\n    handlers.forEach((fn) => fn(ev));\n  });\n\n  return (fn) => handlers.push(fn);\n})();\n\nlet wasCaret = false;\nlet resolveTask = null;\naddInternalListener((ev) => {\n  const s = window.getSelection();\n  if (s.type === 'Caret') {\n    wasCaret = true;\n  } else if (wasCaret && !resolveTask) {\n    resolveTask = Promise.resolve(true).then(() => {\n      wasCaret = false;\n      resolveTask = null;\n    });\n  }\n});\n\nfunction containsNextElement(s, node, walkForward) {\n  const start = node;\n  while (node = walkFromNode(node, walkForward)) {\n    // walking (left) can contain our own parent, which we don't want\n    if (!node.contains(start)) {\n      break;\n    }\n  }\n  if (!node) {\n    return false;\n  }\n  // we look for Element as .containsNode says true for _every_ text node, and we only care about\n  // elements themselves\n  return node instanceof Element && s.containsNode(node, true);\n}\n\nfunction getSelectionDirection(s, leftNode, rightNode) {\n  if (s.type !== 'Range') {\n    return undefined;  // no direction\n  }\n  const measure = () => s.toString().length;\n\n  const initialSize = measure();\n  debug && console.info(`initial selection: \"${s.toString()}\"`)\n\n  if (initialSize === 1 && wasCaret && leftNode === rightNode) {\n    // nb. We need to reset a single selection as Safari _always_ tells us the cursor was dragged\n    // left to right (maybe RTL on those devices).\n    // To be fair, Chrome has the same bug.\n    debug && console.debug('resetting size=1');\n    s.extend(leftNode, 0);\n    s.collapseToEnd();\n    return undefined;\n  }\n\n  let updatedSize;\n\n  // Try extending forward and seeing what happens.\n  s.modify('extend', 'forward', 'character');\n  updatedSize = measure();\n  debug && console.info(`forward selection: \"${s.toString()}\"`)\n\n  if (updatedSize > initialSize || containsNextElement(s, rightNode, true)) {\n    debug && console.info('got forward >, moving right')\n    s.modify('extend', 'backward', 'character');\n    return true;\n  } else if (updatedSize < initialSize || !s.containsNode(leftNode)) {\n    debug && console.info('got forward <, moving left')\n    s.modify('extend', 'backward', 'character');\n    return false;\n  }\n\n  // Maybe we were at the end of something. Extend backwards.\n  // TODO(samthor): We seem to be able to get away without the 'backwards' case.\n  s.modify('extend', 'backward', 'character');\n  updatedSize = measure();\n  debug && console.info(`backward selection: \"${s.toString()}\"`)\n\n  if (updatedSize > initialSize || containsNextElement(s, leftNode, false)) {\n    debug && console.info('got backwards >, moving left')\n    s.modify('extend', 'forward', 'character');\n    return false;\n  } else if (updatedSize < initialSize || !s.containsNode(rightNode)) {\n    debug && console.info('got backwards <, moving right')\n    s.modify('extend', 'forward', 'character');\n    return true;\n  }\n\n  // This is likely a select-all.\n  return undefined;\n}\n\nfunction walkFromNode(node, walkForward) {\n  if (!walkForward) {\n    return node.previousSibling || node.parentNode || null;\n  }\n  while (node) {\n    if (node.nextSibling) {\n      return node.nextSibling;\n    }\n    node = node.parentNode;\n  }\n  return null;\n}\n\nfunction walkTextFromNode(node, isLeft, s) {\n  for (; node; node = walkFromNode(node, isLeft)) {\n    if (node.nodeType !== Node.TEXT_NODE) {\n      continue;\n    }\n\n    const t = node.textContent;\n    if (isLeft) {\n      if (s.length < t.length) {\n        return {node, offset: s.length};\n      }\n\n      const prefix = s.substr(0, t.length);\n      if (prefix !== t) {\n        console.debug('unexpected string prefix', prefix, 'expected', t)\n      }\n\n      s = s.substr(t.length);\n    } else {\n      if (s.length < t.length) {\n        return {node, offset: t.length - s.length};\n      }\n\n      const suffix = s.substr(s.length - t.length);\n      if (suffix !== t) {\n        console.debug('unexpected string suffix', suffix, 'expected', t)\n      }\n\n      s = s.substr(0, s.length - t.length);\n    }\n  }\n\n  return null;  // too far\n}\n\nfunction initialSpace(node) {\n  if (node.nodeType !== Node.TEXT_NODE) {\n    return 0;\n  }\n  return /^\\s*/.exec(node.textContent)[0].length;\n}\n\nfunction ignoredTrailingSpace(node) {\n  if (node.nodeType !== Node.TEXT_NODE) {\n    return 0;\n  }\n  const trailingSpaceCount =  /\\s*$/.exec(node.textContent)[0].length;\n  if (!trailingSpaceCount) {\n    return 0;\n  }\n  return trailingSpaceCount - 1;  // always allow single last\n}\n\nconst cachedRange = new Map();\nexport function getRange(root): Range {\n  if (hasSelection || useDocument) {\n    const s = (useDocument ? document : root).getSelection();\n    return s.rangeCount ? s.getRangeAt(0) : null;\n  }\n\n\n  const thisFrame = cachedRange.get(root);\n  if (thisFrame) {\n    return thisFrame;\n  }\n\n  const initialText = window.getSelection().toString();\n  const result = internalGetShadowSelection(root);\n  const rs = result.range && result.range.toString() || null;\n  if (rs !== null && rs !== initialText) {\n    // TODO: sometimes triggers on single-char hack etc\n\n    if (rs.replace(/\\s/g, '') !== initialText.replace(/\\s/g, '')) {\n      // nb. selection eats initial/ending space, range does not: if whitespace is the only\n      // difference, then ignore\n      console.warn('invalid range, initial text:', initialText);\n      console.warn('vs', rs, result.mode, result.range);\n    }\n  }\n\n  cachedRange.set(root, result.range);\n  window.setTimeout(() => {\n    cachedRange.delete(root);\n  }, 0);\n  debug && console.debug('getRange got', result);\n\n  return result.range;\n}\n\nconst fakeSelectionNode = document.createTextNode('');\nexport function internalGetShadowSelection(root) {\n  const range = document.createRange();\n\n  const s = window.getSelection();\n  // if (!s.containsNode(root.host, true)) {\n  //   return {range: null, mode: 'none'};\n  // }\n\n  // TODO: inserting fake nodes isn't ideal, but containsNode doesn't work on nearby adjacent\n  // text nodes (in fact it returns true for all text nodes on the page?!).\n\n  // insert a fake 'before' node to see if it's selected\n  root.insertBefore(fakeSelectionNode, root.childNodes[0]);\n  const includesBeforeRoot = s.containsNode(fakeSelectionNode);\n  fakeSelectionNode.remove();\n  if (includesBeforeRoot) {\n    return {range: null, mode: 'outside-before'};\n  }\n\n  // insert a fake 'after' node to see if it's selected\n  root.appendChild(fakeSelectionNode);\n  const includesAfterRoot = s.containsNode(fakeSelectionNode);\n  fakeSelectionNode.remove();\n  if (includesAfterRoot) {\n    return {range: null, mode: 'outside-after'};\n  }\n\n  const measure = () => s.toString().length;\n  const initialSelectionContent = s.toString();\n  if (!(s.type === 'Caret' || s.type === 'Range')) {\n    return {range: null, mode: 'outside-after'};\n  }\n  const initialCaret = (s.type === 'Caret');\n\n  const leftNode = findNode(s, root, true);\n  let rightNode;\n  let isNaturalDirection = undefined;\n  if (s.type === 'Range') {\n    rightNode = findNode(s, root, false);  // get right node here _before_ getSelectionDirection\n    isNaturalDirection = getSelectionDirection(s, leftNode, rightNode);\n    // isNaturalDirection means \"going right\"\n  }\n\n  if (s.type === 'Caret') {\n    // we might transition to being a caret, so don't check initial value\n    s.extend(leftNode, 0);\n    const at = measure();\n    s.collapseToEnd();\n\n    range.setStart(leftNode, at);\n    range.setEnd(leftNode, at);\n    return {range, mode: 'caret'};\n  } else if (isNaturalDirection === undefined) {\n    if (s.type !== 'Range') {\n      throw new TypeError('unexpected type: ' + s.type);\n    }\n    // This occurs when we can't move because we can't extend left or right to measure the\n    // direction we're moving in. Good news though: we don't need to _change_ the selection\n    // to measure it, so just return immediately.\n    range.setStart(leftNode, 0);\n    range.setEnd(rightNode, rightNode.length);\n    return {range, mode: 'all'};\n  }\n\n  const size = measure();\n  let offsetLeft, offsetRight;\n\n// only one newline/space char is cared about\n  const validRightLength = rightNode.length - ignoredTrailingSpace(rightNode);\n\n  if (isNaturalDirection) {\n    // walk in the opposite direction first\n    s.extend(leftNode, 0);\n    offsetLeft = measure() + initialSpace(leftNode);  // measure doesn't include initial space\n\n    // then in our actual direction\n    s.extend(rightNode, validRightLength);\n    offsetRight = validRightLength - (measure() - size);\n\n    // then revert to the original position\n    s.extend(rightNode, offsetRight);\n  } else {\n    // walk in the opposite direction first\n    s.extend(rightNode, validRightLength);\n    offsetRight = validRightLength - measure();\n\n    // then in our actual direction\n    s.extend(leftNode, 0);\n    offsetLeft = measure() - size + initialSpace(leftNode);  // doesn't include initial space\n\n    // then revert to the original position\n    s.extend(leftNode, offsetLeft);\n  }\n\n  if (debug) {\n    if (leftNode === rightNode) {\n      console.info('got string', leftNode.textContent.substr(offsetLeft, offsetRight - offsetLeft));\n    } else {\n      console.info('>>> string', leftNode.textContent.substr(offsetLeft));\n      console.info('<<< string', rightNode.textContent.substr(0, offsetRight));\n    }\n  }\n\n  range.setStart(leftNode, offsetLeft);\n  range.setEnd(rightNode, offsetRight);\n  return {\n    mode: isNaturalDirection ? 'right' : 'left',\n    range,\n  };\n}\n","import { EditorSelection } from '../text-editor.interface';\nimport { getRange } from './shadow-dom-selection.helper';\n\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent) ||\n  /iPad|iPhone|iPod/.test(navigator.userAgent) && !(window as any).MSStream;\n\nexport class SelectionHelper {\n  get(container: Element): EditorSelection {\n    if (!container) {\n      document.getSelection().removeAllRanges();\n\n      return null;\n    }\n\n    const canvas = document.querySelector('pe-editor-canvas');\n\n    const range = getRange(canvas.shadowRoot);\n\n    if (!range) {\n      return null;\n    }\n\n    const preSelectionRange: Range = range.cloneRange();\n    preSelectionRange.selectNodeContents(container);\n    preSelectionRange.setEnd(range.startContainer, range.startOffset);\n    const start: number = preSelectionRange.toString().length;\n\n    return {\n      start,\n      end: start + range.toString().length,\n      range,\n      container,\n      parentElement: range.endContainer.parentElement,\n    };\n  }\n\n  restore(savedSelection: EditorSelection): void {\n    if (!savedSelection) {\n      return;\n    }\n\n    const doc: Document = savedSelection.container.ownerDocument;\n    const win: Window = doc.defaultView;\n    const range: Range = doc.createRange();\n    range.setStart(savedSelection.container, 0);\n    range.collapse(true);\n    const nodeStack: Element[] = [savedSelection.container];\n    let node;\n    let foundStart = false;\n    let stop = false;\n    let charIndex = 0;\n\n    while (!stop && (node = nodeStack.pop())) {\n      if (node.nodeType == 3) {\n        const nextCharIndex = charIndex + node.length;\n        if (\n          !foundStart &&\n          savedSelection.start >= charIndex &&\n          savedSelection.start <= nextCharIndex\n        ) {\n          range.setStart(node, savedSelection.start - charIndex);\n          foundStart = true;\n        }\n        if (\n          foundStart &&\n          savedSelection.end >= charIndex &&\n          savedSelection.end <= nextCharIndex\n        ) {\n          range.setEnd(node, savedSelection.end - charIndex);\n          stop = true;\n        }\n        charIndex = nextCharIndex;\n      } else {\n        let i = node.childNodes.length;\n        while (i--) {\n          nodeStack.push(node.childNodes[i]);\n        }\n      }\n    }\n\n    const selection = win.getSelection();\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n\n  findParentTag(\n    selection: Selection,\n    tagName?: string,\n    className?: string,\n    searchDepth = 10, // tslint:disable-line:typedef\n  ): HTMLElement | null {\n    let parentTag = null;\n\n    if (!selection || !selection.anchorNode || !selection.focusNode) {\n      return null;\n    }\n\n    const boundNodes = [\n      selection.anchorNode as HTMLElement,\n      selection.focusNode as HTMLElement,\n    ];\n\n    boundNodes.forEach(parent => {\n      let searchDepthIterable = searchDepth;\n\n      while (searchDepthIterable > 0 && parent.parentNode) {\n        if (!tagName || parent.tagName === tagName) {\n          parentTag = parent;\n\n          if (\n            className &&\n            parent.classList &&\n            !parent.classList.contains(className)\n          ) {\n            parentTag = null;\n          }\n\n          if (parentTag) {\n            break;\n          }\n        }\n\n        parent = parent.parentNode as HTMLElement;\n        searchDepthIterable--;\n      }\n    });\n\n    return parentTag;\n  }\n}\n","export enum ExecCommand {\n  CreateLink = 'createLink',\n  Unlink = 'unlink',\n  Bold = 'bold',\n  Italic = 'italic',\n  Underline = 'underline',\n  FontName = 'fontName',\n  FontSize = 'fontSize',\n  ForeColor = 'foreColor',\n  InsertHTML = 'insertHTML',\n  InsertText = 'insertText',\n  JustifyLeft = 'justifyLeft',\n  JustifyRight = 'justifyRight',\n  JustifyCenter = 'justifyCenter',\n  JustifyFull = 'justifyFull',\n  InsertOrderedList = 'insertOrderedList',\n  InsertUnorderedList = 'insertUnorderedList',\n}\n\nexport interface EditorSelection {\n  start: number;\n  end: number;\n  range: Range;\n  container: Element,\n  parentElement: HTMLElement;\n}\n","/* tslint:disable:member-ordering */\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport { SelectionHelper } from '../helpers/selection.helper';\nimport { EditorSelection } from '../text-editor.interface';\n\n@Injectable()\nexport class TextEditorSelection {\n\n  constructor(\n    private selectionHelper: SelectionHelper,\n  ) {}\n\n  private readonly savedValueSubject = new BehaviorSubject<EditorSelection>(null);\n\n  savedValue$: Observable<EditorSelection> = this.savedValueSubject.asObservable().pipe(\n    share(),\n  );\n\n  get savedValue(): EditorSelection {\n    return this.savedValueSubject.value;\n  }\n\n  set savedValue(selection: EditorSelection) {\n    this.savedValueSubject.next(selection);\n  }\n\n  saveSelection(selection: EditorSelection): void {\n    this.savedValue = selection;\n  }\n\n  getSelection(container: Element): EditorSelection {\n    return this.selectionHelper.get(container);\n  }\n\n  restore(): void {\n    this.selectionHelper.restore(this.savedValue);\n  }\n\n  expandToTag(element: HTMLElement): void {\n    // const selection = this.savedValue.data;\n\n    // selection.removeAllRanges();\n    // const range = document.createRange();\n\n    // range.selectNodeContents(element);\n    // selection.addRange(range);\n  }\n\n  findParentTag(tagName: string): HTMLElement | null {\n    if (!this.savedValue) {\n      return null;\n    }\n\n    let parentElement: HTMLElement = this.savedValue.range.endContainer.parentElement;\n    while (parentElement && parentElement.tagName !== tagName && parentElement.tagName !== 'DIV') {\n      parentElement = parentElement.parentElement;\n    }\n\n    return parentElement;\n  }\n\n  // private get selection(): Selection {\n  //   return window.getSelection();\n  // }\n\n}\n","import { ExecCommand } from '../../text-editor.interface';\n\nexport abstract class BaseTransform {\n\n  execCommand(command: ExecCommand, value?: string): void {\n    document.execCommand(command, false, value);\n  }\n\n  protected get isSelectionExist(): boolean {\n    return window.getSelection().type.toLowerCase() !== 'none';\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ExecCommand } from '../../text-editor.interface';\nimport { Transform } from '../../types/transform';\nimport { BaseTransform } from './base.transform';\n\n@Injectable()\nexport class BoldTransform extends BaseTransform implements Transform {\n\n  toggle(): void {\n    this.execCommand(ExecCommand.Bold);\n  }\n\n  get value(): boolean {\n    if (!this.isSelectionExist) {\n      return false;\n    }\n\n    return document.queryCommandState(ExecCommand.Bold);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ExecCommand } from '../../text-editor.interface';\nimport { Transform } from '../../types/transform';\nimport { BaseTransform } from './base.transform';\n\n@Injectable()\nexport class ColorTransform extends BaseTransform implements Transform {\n\n  set value(value: string) {\n    this.execCommand(ExecCommand.ForeColor, value);\n  }\n\n  get value(): string {\n    return document.queryCommandValue(ExecCommand.ForeColor);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n// import { PebLinkDatasetRouteKey } from '../../text-editor.constants';\nimport { ExecCommand } from '../../text-editor.interface';\nimport { Transform } from '../../types/transform';\nimport { TextEditorSelection } from '../selection.service';\nimport { BaseTransform } from './base.transform';\n\n@Injectable()\nexport class ExternalLinkTransform extends BaseTransform implements Transform {\n\n  constructor(\n    private selection: TextEditorSelection,\n  ) {\n    super();\n  }\n\n  set value(value: string) {\n    value ? this.link(value) : this.unlink();\n  }\n\n  get value(): string {\n    if (!this.selection.savedValue) {\n      return null;\n    }\n\n    const parentElement = this.getParentLinkElement();\n\n    return parentElement && parentElement.hasAttribute('href') ? parentElement.getAttribute('href') : null;\n  }\n\n  private link(link: string) {\n    // const anchorTag = this.selection.findParentTag('A');\n    // if (anchorTag) {\n    //   this.selection.expandToTag(anchorTag);\n    // }\n\n    this.execCommand(ExecCommand.CreateLink, this.getLinkWithHttps(link));\n\n    // Update selection\n    this.selection.saveSelection(\n      this.selection.getSelection(this.selection.savedValue.container)\n    );\n\n    const parentElement = this.getParentLinkElement();\n    parentElement.setAttribute('target', '_blank');\n\n    // this.execCommand(ExecCommand.CreateLink);\n  }\n\n  getParentLinkElement(): HTMLElement {\n    let parentElement: HTMLElement = this.selection.savedValue.parentElement;\n\n    while (parentElement && parentElement.tagName !== 'A') {\n      parentElement = parentElement.parentElement;\n    }\n\n    return parentElement;\n  }\n\n  getLinkWithHttps(link: string): string {\n    return ((link.indexOf('://') === -1) && (link.indexOf('mailto:') === -1) ) ? `https://${link}` : link\n  }\n\n  private unlink(): void {\n    this.execCommand(ExecCommand.Unlink);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ExecCommand } from '../../text-editor.interface';\nimport { Transform } from '../../types/transform';\nimport { BaseTransform } from './base.transform';\n\n@Injectable()\nexport class FontFamilyTransform extends BaseTransform implements Transform {\n\n  set value(value: string) {\n    this.execCommand(ExecCommand.FontName, value);\n  }\n\n  get value(): string {\n    const fontName: string = document.queryCommandValue(ExecCommand.FontName);\n\n    return fontName ? fontName.replace(/['\"]+/g, '') : null;\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Transform } from '../../types/transform';\nimport { TextEditorSelection } from '../selection.service';\nimport { BaseTransform } from './base.transform';\n\n@Injectable()\nexport class FontSizeTransform extends BaseTransform implements Transform {\n\n  constructor(\n    private selection: TextEditorSelection,\n  ) {\n    super();\n  }\n\n  set value(value: number) {\n    if (!this.selection.savedValue) {\n      throw new Error('There is no selection');\n    }\n\n    document.execCommand('fontSize', false, '1');\n    const fontElements = this.selection.savedValue.container.getElementsByTagName('font');\n\n    Array.from(fontElements).forEach(el => {\n      if (el.getAttribute('size') !== '1') {\n        return;\n      }\n\n      el.removeAttribute('size');\n      el.style.fontSize = `${value}px`;\n    });\n  }\n\n  get value(): number {\n    if (!this.selection.savedValue) {\n      return null;\n    }\n\n    let parentElement: HTMLElement = this.selection.savedValue.parentElement;\n    while (parentElement && parentElement.tagName !== 'SPAN' && !parentElement.style.fontSize) {\n      parentElement = parentElement.parentElement;\n    }\n\n    const size = parentElement ? parentElement.style.fontSize : null;\n\n    return size ? parseInt(size, 10) : null;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ExecCommand } from '../../text-editor.interface';\nimport { Transform } from '../../types/transform';\nimport { BaseTransform } from './base.transform';\n\n@Injectable()\nexport class ItalicTransform extends BaseTransform implements Transform {\n\n  toggle(): void {\n    this.execCommand(ExecCommand.Italic);\n  }\n\n  get value(): boolean {\n    if (!this.isSelectionExist) {\n      return false;\n    }\n\n    return document.queryCommandState(ExecCommand.Italic);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ExecCommand } from '../../text-editor.interface';\nimport { Transform } from '../../types/transform';\nimport { BaseTransform } from './base.transform';\n\n@Injectable()\nexport class JustifyCenterTransform extends BaseTransform implements Transform {\n  justify(): void {\n    this.execCommand(ExecCommand.JustifyCenter);\n  }\n\n  get value(): boolean {\n    if (!this.isSelectionExist) {\n      return false;\n    }\n\n    return document.queryCommandState(ExecCommand.JustifyCenter);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ExecCommand } from '../../text-editor.interface';\nimport { Transform } from '../../types/transform';\nimport { BaseTransform } from './base.transform';\n\n@Injectable()\nexport class JustifyFullTransform extends BaseTransform implements Transform {\n  justify(): void {\n    this.execCommand(ExecCommand.JustifyFull);\n  }\n\n  get value(): boolean {\n    if (!this.isSelectionExist) {\n      return false;\n    }\n\n    return document.queryCommandState(ExecCommand.JustifyFull);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ExecCommand } from '../../text-editor.interface';\nimport { Transform } from '../../types/transform';\nimport { BaseTransform } from './base.transform';\n\n@Injectable()\nexport class JustifyLeftTransform extends BaseTransform implements Transform {\n  justify(): void {\n    this.execCommand(ExecCommand.JustifyLeft);\n  }\n\n  get value(): boolean {\n    if (!this.isSelectionExist) {\n      return false;\n    }\n\n    return document.queryCommandState(ExecCommand.JustifyLeft);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ExecCommand } from '../../text-editor.interface';\nimport { Transform } from '../../types/transform';\nimport { BaseTransform } from './base.transform';\n\n@Injectable()\nexport class JustifyRightTransform extends BaseTransform implements Transform {\n  justify(): void {\n    this.execCommand(ExecCommand.JustifyRight);\n  }\n\n  get value(): boolean {\n    if (!this.isSelectionExist) {\n      return false;\n    }\n\n    return document.queryCommandState(ExecCommand.JustifyRight);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { PebLinkDatasetRouteKey } from '../../text-editor.constants';\nimport { ExecCommand } from '../../text-editor.interface';\nimport { Transform } from '../../types/transform';\nimport { TextEditorSelection } from '../selection.service';\nimport { BaseTransform } from './base.transform';\n\n@Injectable()\nexport class LinkTransform extends BaseTransform implements Transform {\n\n  constructor(\n    private selection: TextEditorSelection,\n  ) {\n    super();\n  }\n\n  set value(value: string) {\n    value ? this.link(value) : this.unlink();\n  }\n\n  get value(): string {\n    if (!this.selection.savedValue) {\n      return null;\n    }\n    let parentElement: HTMLElement = this.selection.savedValue.parentElement;\n\n    while (parentElement && parentElement.tagName !== 'A') {\n      parentElement = parentElement.parentElement;\n    }\n\n    return parentElement && parentElement.dataset ? parentElement.dataset[PebLinkDatasetRouteKey] : null;\n  }\n\n  private link(link: string): void {\n    const anchorTag = this.selection.findParentTag('A');\n    if (anchorTag) {\n      this.selection.expandToTag(anchorTag);\n    }\n\n    this.execCommand(ExecCommand.CreateLink, '#');\n\n    // Update selection\n    this.selection.saveSelection(\n      this.selection.getSelection(this.selection.savedValue.container),\n    );\n\n    this.selection.savedValue.parentElement.dataset[PebLinkDatasetRouteKey] = link;\n\n    this.execCommand(ExecCommand.CreateLink);\n  }\n\n  private unlink(): void {\n    this.execCommand(ExecCommand.Unlink);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { isSafari } from '../../helpers/selection.helper';\nimport { ExecCommand } from '../../text-editor.interface';\nimport { Transform } from '../../types/transform';\nimport { BaseTransform } from './base.transform';\n\n@Injectable()\nexport class OrderedTransform extends BaseTransform implements Transform {\n  apply(currentValue: string): string | void {\n    if (this.value) {\n      return this.removeTransformList(currentValue);\n    }\n\n    this.execCommand(ExecCommand.InsertOrderedList);\n  }\n\n  get value(): boolean {\n    return document.queryCommandState(ExecCommand.InsertOrderedList);\n  }\n\n  /**\n   * Remove ordered list needs to be manually (issue on return to the previous value).\n   *\n   * @param currentValue Current text widget value.\n   */\n  removeTransformList(currentValue: string): string {\n    if (!currentValue) {\n      return currentValue;\n    }\n\n    const olList = currentValue.indexOf('<ol>');\n    const olListClosed = currentValue.indexOf('</ol>');\n    const listContent = currentValue.slice(olList + 4, olListClosed);\n\n    const newListContent = listContent.replace(/<li>/g, '').replace(/<\\/li>/g, isSafari ? '' : '<br>');\n\n    const firstPart = currentValue.split('<ol>');\n    const secondPart = currentValue.split('</ol>');\n\n    return firstPart[0].concat(newListContent).concat(secondPart[1]);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { ExecCommand } from '../../text-editor.interface';\nimport { Transform } from '../../types/transform';\nimport { BaseTransform } from './base.transform';\n\n@Injectable()\nexport class UnderlineTransform extends BaseTransform implements Transform {\n\n  toggle(): void {\n    this.execCommand(ExecCommand.Underline);\n  }\n\n  get value(): boolean {\n    if (!this.isSelectionExist) {\n      return false;\n    }\n\n    return document.queryCommandState(ExecCommand.Underline);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { isSafari } from '../../helpers/selection.helper';\nimport { ExecCommand } from '../../text-editor.interface';\nimport { Transform } from '../../types/transform';\nimport { BaseTransform } from './base.transform';\n\n@Injectable()\nexport class UnorderedTransform extends BaseTransform implements Transform {\n  apply(currentValue: string) {\n    if (this.value) {\n      return this.removeTransformList(currentValue);\n    }\n\n    this.execCommand(ExecCommand.InsertUnorderedList);\n  }\n\n  get value(): boolean {\n    return document.queryCommandState(ExecCommand.InsertUnorderedList);\n  }\n\n  /**\n   * Remove unordered list needs to be manually (issue on return to the previous value).\n   *\n   * @param currentValue Current text widget value.\n   */\n  removeTransformList(currentValue: string): string {\n    if (!currentValue) {\n      return currentValue;\n    }\n\n    const ulList = currentValue.indexOf('<ul>');\n    const ulListClosed = currentValue.indexOf('</ul>');\n    const listContent = currentValue.slice(ulList + 4, ulListClosed);\n\n    const newListContent = listContent.replace(/<li>/g, '').replace(/<\\/li>/g, isSafari ? '' : '<br>');\n\n    const firstPart = currentValue.split('<ul>');\n    const secondPart = currentValue.split('</ul>');\n\n    return firstPart[0].concat(newListContent).concat(secondPart[1]);\n  }\n}\n","/* tslint:disable:member-ordering */\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { BehaviorSubject, merge, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, map, share } from 'rxjs/operators';\n\nimport { TextEditorComponent } from '../components/text-editor.component';\nimport { EditorSelection } from '../text-editor.interface';\nimport { TextEditorSelection } from './selection.service';\nimport { BoldTransform } from './transforms/bold.transform';\nimport { ColorTransform } from './transforms/color.transform';\nimport { ExternalLinkTransform } from './transforms/external-link.transform';\nimport { FontFamilyTransform } from './transforms/font-family.transform';\nimport { FontSizeTransform } from './transforms/font-size.transform';\nimport { ItalicTransform } from './transforms/italic.transform';\nimport { JustifyCenterTransform } from './transforms/justify-center.transform';\nimport { JustifyFullTransform } from './transforms/justify-full.transform';\nimport { JustifyLeftTransform } from './transforms/justify-left.transform';\nimport { JustifyRightTransform } from './transforms/justify-right.transform';\nimport { LinkTransform } from './transforms/link.transform';\nimport { OrderedTransform } from './transforms/ordered.transform';\nimport { UnderlineTransform } from './transforms/underline.transform';\nimport { UnorderedTransform } from './transforms/unordered.transform';\n\n@Injectable()\nexport class StateService {\n  textEditorComponent: TextEditorComponent;\n  lastContentEdited: string;\n\n  private readonly stateSubject$ = new BehaviorSubject<string>(null);\n  readonly removeListAlignSubject$ = new Subject<string>();\n\n  private readonly transformationCompletedSubject$ = new EventEmitter();\n\n  transformationCompleted$: Observable<null> = this.transformationCompletedSubject$.asObservable();\n\n  changed$: Observable<any> = merge(\n    this.transformationCompletedSubject$,\n    this.selection.savedValue$,\n  ).pipe(share());\n\n  bold$: Observable<boolean> = this.changed$.pipe(\n    map(() => this.bold),\n    distinctUntilChanged(),\n  );\n\n  color$: Observable<string> = this.changed$.pipe(\n    map(() => this.color),\n    distinctUntilChanged(),\n  );\n\n  fontSize$: Observable<number> = this.changed$.pipe(\n    map(() => this.fontSize),\n    distinctUntilChanged(),\n  );\n\n  fontFamily$: Observable<string> = this.changed$.pipe(\n    map(() => this.fontFamily),\n    distinctUntilChanged(),\n  );\n\n  italic$: Observable<boolean> = this.changed$.pipe(\n    map(() => this.italic),\n    distinctUntilChanged(),\n  );\n\n  link$: Observable<string> = this.changed$.pipe(\n    map(() => this.link),\n    distinctUntilChanged(),\n  );\n\n  externalLink$: Observable<string> = this.changed$.pipe(\n    map(() => this.externalLink),\n    distinctUntilChanged(),\n  );\n\n  justifyCenter$: Observable<boolean> = this.changed$.pipe(\n    map(() => this.justifyCenter),\n    distinctUntilChanged(),\n  );\n\n  justifyLeft$: Observable<boolean> = this.changed$.pipe(\n    map(() => this.justifyLeft),\n    distinctUntilChanged(),\n  );\n\n  justifyRight$: Observable<boolean> = this.changed$.pipe(\n    map(() => this.justifyRight),\n    distinctUntilChanged(),\n  );\n\n  justifyFull$: Observable<boolean> = this.changed$.pipe(\n    map(() => this.justifyFull),\n    distinctUntilChanged(),\n  );\n\n  orderedList$: Observable<boolean> = this.changed$.pipe(\n    map(() => this.orderedList),\n    distinctUntilChanged(),\n  );\n\n  underline$: Observable<boolean> = this.changed$.pipe(\n    map(() => this.underline),\n    distinctUntilChanged(),\n  );\n\n  unorderedList$: Observable<boolean> = this.changed$.pipe(\n    map(() => this.unorderedList),\n    distinctUntilChanged(),\n  );\n\n  value$: Observable<string> = this.stateSubject$.asObservable().pipe(\n    distinctUntilChanged(),\n  );\n\n  constructor(\n    private selection: TextEditorSelection,\n    private boldTransform: BoldTransform,\n    private colorTransform: ColorTransform,\n    private fontFamilyTransform: FontFamilyTransform,\n    private fontSizeTransform: FontSizeTransform,\n    private italicTransform: ItalicTransform,\n    private linkTransform: LinkTransform,\n    private externalLinkTransform: ExternalLinkTransform,\n    private underlineTransform: UnderlineTransform,\n    private justifyLeftTransform: JustifyLeftTransform,\n    private justifyRightTransform: JustifyRightTransform,\n    private justifyCenterTransform: JustifyCenterTransform,\n    private justifyFullTransform: JustifyFullTransform,\n    private unorderedTransform: UnorderedTransform,\n    private orderedTransform: OrderedTransform,\n  ) { }\n\n  set value(value: string) {\n    this.stateSubject$.next(value);\n  }\n\n  get value(): string {\n    return this.stateSubject$.getValue();\n  }\n\n  set link(value: string) {\n    this.selection.restore();\n\n    if (this.externalLink) {\n      this.externalLinkTransform.value = null;\n    }\n\n    this.linkTransform.value = value;\n    this.transformationCompletedSubject$.next();\n  }\n\n  get link(): string {\n    return this.linkTransform.value;\n  }\n\n  set externalLink(value: string) {\n    this.selection.restore();\n\n    if (this.link) {\n      this.linkTransform.value = null;\n    }\n\n    this.externalLinkTransform.value = value;\n    this.transformationCompletedSubject$.next();\n  }\n\n  get externalLink(): string {\n    return this.externalLinkTransform.value;\n  }\n\n  toggleBold(): void {\n    this.selection.restore();\n    this.boldTransform.toggle();\n    this.transformationCompletedSubject$.next();\n  }\n\n  get bold(): boolean {\n    return this.boldTransform.value;\n  }\n\n  toggleItalic(): void {\n    this.selection.restore();\n    this.italicTransform.toggle();\n    this.transformationCompletedSubject$.next();\n  }\n\n  get italic(): boolean {\n    return this.italicTransform.value;\n  }\n\n  toggleUnderline(): void {\n    this.selection.restore();\n    this.underlineTransform.toggle();\n    this.transformationCompletedSubject$.next();\n  }\n\n  get underline(): boolean {\n    return this.underlineTransform.value;\n  }\n\n  set fontSize(value: number) {\n    this.selection.restore();\n    this.fontSizeTransform.value = value;\n    this.transformationCompletedSubject$.next();\n  }\n\n  get fontSize(): number {\n    const size: number = this.fontSizeTransform.value;\n\n    return typeof size === 'number' ? size : null;\n  }\n\n  set color(value: string) {\n    this.selection.restore();\n    this.colorTransform.value = value;\n    this.transformationCompletedSubject$.next();\n  }\n\n  get color(): string {\n    return this.colorTransform.value;\n  }\n\n  set fontFamily(value: string) {\n    this.selection.restore();\n    this.fontFamilyTransform.value = value;\n    this.transformationCompletedSubject$.next();\n  }\n\n  get fontFamily(): string {\n    return this.fontFamilyTransform.value;\n  }\n\n  get justifyLeft(): boolean {\n    return this.justifyLeftTransform.value;\n  }\n\n  toggleJustifyLeft(): void {\n    this.justifyLeftTransform.justify();\n    this.transformationCompletedSubject$.next();\n  }\n\n  get justifyRight(): boolean {\n    return this.justifyRightTransform.value;\n  }\n\n  toggleJustifyRight(): void {\n    this.justifyRightTransform.justify();\n    this.transformationCompletedSubject$.next();\n  }\n\n  get justifyCenter(): boolean {\n    return this.justifyCenterTransform.value;\n  }\n\n  toggleJustifyCenter(): void {\n    this.justifyCenterTransform.justify();\n    this.transformationCompletedSubject$.next();\n  }\n\n  get justifyFull(): boolean {\n    return this.justifyFullTransform.value;\n  }\n\n  toggleJustifyFull(): void {\n    this.justifyFullTransform.justify();\n    this.transformationCompletedSubject$.next();\n  }\n\n  get unorderedList(): boolean {\n    return this.unorderedTransform.value;\n  }\n\n  toggleUnorderedList(): void {\n    const newContent = this.unorderedTransform.apply(this.value);\n\n    if (newContent) {\n      this.value = newContent;\n      this.removeListAlignSubject$.next(newContent);\n    } else {\n      this.removeListAlignSubject$.next(null);\n    }\n\n    this.transformationCompletedSubject$.next();\n  }\n\n  get orderedList(): boolean {\n    return this.orderedTransform.value;\n  }\n\n  toggleOrderedList(): void {\n    const newContent = this.orderedTransform.apply(this.value);\n\n    if (newContent) {\n      this.value = newContent;\n      this.removeListAlignSubject$.next(newContent);\n    } else {\n      this.removeListAlignSubject$.next(null);\n    }\n\n    this.transformationCompletedSubject$.next();\n  }\n\n  saveSelection(selection: EditorSelection): void {\n    this.selection.saveSelection(selection);\n  }\n\n  findParentTag(tag: string): HTMLElement {\n    return this.selection.findParentTag(tag);\n  }\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { StateService } from './text-editor-state.service';\nimport { TextEditorSelection } from './selection.service';\n\n@Injectable()\nexport class TextEditor {\n\n  constructor(\n    public blockManager: StateService,\n    public selection: TextEditorSelection,\n    protected injector: Injector,\n  ) {\n  }\n\n  init(): void {\n    // super.init();\n    // this.injector.get(TextEditorComponent);\n    // this.initTransformations();\n  }\n\n  // private initTransformations() {\n    // this.transformationRegistry.set('italic', new InlineItalic());\n  // }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safeHtml'\n})\nexport class SafeHtmlPipe implements PipeTransform {\n\n  constructor(private sanitized: DomSanitizer) {}\n  transform(value: string) {\n    return this.sanitized.bypassSecurityTrustHtml(value);\n  }\n\n}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Injector,\n  Input,\n  OnDestroy,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { BehaviorSubject, fromEvent, merge, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil, tap } from 'rxjs/operators';\n\nimport { SelectionHelper } from '../helpers/selection.helper';\nimport { TextEditor } from '../services/text-editor';\nimport { StateService } from '../services/text-editor-state.service';\nimport { ExecCommand } from '../text-editor.interface';\n\n@Component({\n  selector: 'peb-text-editor-new', // tslint:disable-line\n  templateUrl: './text-editor.component.html',\n  styleUrls: ['./text-editor.component.scss'],\n})\nexport class TextEditorComponent implements AfterViewInit, OnDestroy {\n  @Input()\n  set value(value: string) {\n    if (!value) {\n      return;\n    }\n\n    this.initialValue$.next(value);\n  }\n\n  get textAreaElement(): HTMLElement {\n    return this.textArea.nativeElement;\n  }\n\n  initialValue$ = new BehaviorSubject<string>('');\n  changes$ = new Subject<string>();\n  destroy$ = new Subject<boolean>();\n\n  @Input()\n  editing = false;\n\n  @Output()\n  changed = new EventEmitter<string>();\n\n  @ViewChild('textArea', { static: true })\n  textArea: ElementRef;\n  textEditor: TextEditor = this.injector.get(TextEditor);\n  state: StateService = this.injector.get(StateService);\n\n  constructor(\n    public injector: Injector,\n    private changeDetectorRef: ChangeDetectorRef,\n    private selectionHelper: SelectionHelper,\n  ) { }\n\n  // init(): void {\n  // TODO set state here instead of @input state\n  // }\n\n  ngAfterViewInit(): void {\n    this.bindEvents();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  onInput(): void {\n    this.changes$.next(this.textArea.nativeElement.innerHTML);\n    this.state.value = this.textArea.nativeElement.innerHTML;\n  }\n\n  onBlur(): void {\n    this.state.value = this.textArea.nativeElement.innerHTML;\n  }\n\n  onPaste(event: ClipboardEvent): void {\n    event.preventDefault();\n    const strippedText = event.clipboardData.getData('text');\n    document.execCommand(ExecCommand.InsertText, false, strippedText);\n  }\n\n  private bindEvents(): void {\n    this.changes$.pipe(\n      tap(value => this.changed.emit(value)),\n      takeUntil(this.destroy$),\n    ).subscribe();\n\n    /**\n     * Safari doesn't recognize fromEvent(document, 'selectionchange')\n     * probably the reason is Shadow DOM\n     */\n    merge(\n      fromEvent(this.textArea.nativeElement, 'keyup'),\n      fromEvent(this.textArea.nativeElement, 'click'),\n      fromEvent(this.textArea.nativeElement, 'mousemove'),\n      this.state.transformationCompleted$,\n    ).pipe(\n      filter(() => this.editing),\n      map(() => this.selectionHelper.get(this.textArea.nativeElement)),\n      filter(selection => !!selection),\n      distinctUntilChanged((prev, next) => JSON.stringify(prev) === JSON.stringify(next)),\n      tap(selection => this.state.saveSelection(selection)),\n      takeUntil(this.destroy$),\n    ).subscribe();\n  }\n}\n","<div\n  #textArea\n  id=\"text-editor\"\n  [innerHtml]=\"initialValue$ | async | safeHtml\"\n  [contentEditable]=\"editing\"\n  (input)=\"onInput()\"\n  (blur)=\"onBlur()\"\n  (paste)=\"onPaste($event)\"\n  data-placeholder=\"Text\"\n></div>\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[peTextEditorElementDef]'\n})\nexport class TextEditorElementDirective {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TextEditorElementDirective } from './components/editor-element.directive';\nimport { TextEditorComponent } from './components/text-editor.component';\nimport { SafeHtmlPipe } from './pipes/safe-html.pipe';\nimport { TextEditor } from './services/text-editor';\nimport { StateService } from './services/text-editor-state.service';\nimport { TextEditorSelection } from './services/selection.service';\nimport { BoldTransform } from './services/transforms/bold.transform';\nimport { ColorTransform } from './services/transforms/color.transform';\nimport { FontFamilyTransform } from './services/transforms/font-family.transform';\nimport { FontSizeTransform } from './services/transforms/font-size.transform';\nimport { ItalicTransform } from './services/transforms/italic.transform';\nimport { LinkTransform } from './services/transforms/link.transform';\nimport { ExternalLinkTransform } from './services/transforms/external-link.transform';\nimport { UnderlineTransform } from './services/transforms/underline.transform';\nimport { SelectionHelper } from './helpers/selection.helper';\nimport { JustifyCenterTransform } from './services/transforms/justify-center.transform';\nimport { JustifyLeftTransform } from './services/transforms/justify-left.transform';\nimport { JustifyRightTransform } from './services/transforms/justify-right.transform';\nimport { JustifyFullTransform } from './services/transforms/justify-full.transform';\nimport { UnorderedTransform } from './services/transforms/unordered.transform';\nimport { OrderedTransform } from './services/transforms/ordered.transform';\n\nconst providers = [\n  TextEditor,\n  StateService,\n  TextEditorSelection,\n  BoldTransform,\n  ColorTransform,\n  FontFamilyTransform,\n  FontSizeTransform,\n  ItalicTransform,\n  LinkTransform,\n  ExternalLinkTransform,\n  UnderlineTransform,\n  JustifyCenterTransform,\n  JustifyLeftTransform,\n  JustifyRightTransform,\n  JustifyFullTransform,\n  UnorderedTransform,\n  OrderedTransform,\n  SelectionHelper,\n  TextEditorComponent,\n];\n\n@NgModule({\n  declarations: [\n    TextEditorComponent,\n    TextEditorElementDirective,\n    SafeHtmlPipe,\n  ],\n  imports: [\n    CommonModule,\n  ],\n  providers,\n  exports: [TextEditorComponent]\n})\nexport class PebTextEditorModule {\n  // static forRoot(): ModuleWithProviders {\n  //   return {\n  //     ngModule: PebTextEditorModule,\n  //     providers,\n  //   };\n  // }\n}\n","export const PebLinkDatasetRouteKey = 'id';\nexport const PebLinkDatasetURLKey = 'url';\n"]}